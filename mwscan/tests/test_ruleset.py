import os
import sys
from mwscan.ruleset import providers
from unittest import TestCase

# speed up repeated tests, depends on py2/3 pickle version
try:
	import requests_cache
	requests_cache.install_cache('rulesets-{0}'.format(sys.version_info[0]), expire_after=3600*24)
except ImportError:
	pass


class TestRuleset():

	""" 
		Checks rule providers:
		 - Minimum number of parsed rules / whitelists
		 - Do rules compile with our Yara?

		DRY: uses test generators (doesn't work with unittest.TestCase)

	"""


	def _check_provider(self, provider, expected_numrules, expected_numwhitelist):
		rules, whitelist = providers[provider]().get()

		# cannot iterate two times over yara.Rules object, 
		# no other way to count unfortunately				
		# got_numrules = len(list(iter(rules)))
		got_numwhitelist = len(whitelist)

		assert type(rules).__name__ == 'Rules', \
			'wrong type: %s' % type(rules).__name__

		# assert got_numrules >= expected_numrules, \
		# 	'wrong num rules: %s' % got_numrules

		assert got_numwhitelist >= expected_numwhitelist, \
			'wrong num whitelists %s' % got_numwhitelist

	def test_providers(self):

		tests = (
			# provider, min rules, min whitelisted
			('nbs', 15, 1279),
			('byte', 60, 20),
			('magemojo', 150, 65000),
		)

		for provider, numrules, numwhitelists in tests:
			yield self._check_provider, provider, numrules, numwhitelists

